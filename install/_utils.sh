#!/usr/bin/env bash

# Color functions
color_reset="\033[0m"
color_info="\033[1;34m"   # Bold Blue
color_success="\033[1;32m" # Bold Green
color_warn="\033[1;33m"    # Bold Yellow
color_error="\033[1;31m"   # Bold Red

info()    { echo -e "${color_info}info: ${color_reset} $*"; }
success() { echo -e "${color_success}success: ${color_reset} $*"; }
warn()    { echo -e "${color_warn}warning: ${color_reset} $*"; }
error()   { echo -e "${color_error}error: ${color_reset} $*"; }

create_backup_and_delete() {
	local file="$1"

	if sudo test -L "$file"; then
		warn "File $file is a symlink, no backup created."
		sudo rm -f "$file" && success "Removed symlink: $file"
		return 0
	fi

	if ! sudo test -e "$file"; then
		warn "File $file does not exist, no backup created."
		return 0
	fi

	sudo cp -rf "$file" "${file}.bak" && success "Backup created: ${file}.bak" && sudo rm -rf "$file" && success "Removed file: $file"
}

create_backup() {
	local file="$1"

	if sudo test -L "$file"; then
		warn "File $file is a symlink, no backup created."
		return 0
	fi

	if ! sudo test -e "$file"; then
		warn "File $file does not exist, no backup created."
		return 0
	fi

	sudo cp -rf "$file" "${file}.bak" && success "Backup created: ${file}.bak"
}

create_symlink() {
	local target="$1"
	local link_name="$2"

	create_backup_and_delete "$link_name" && sudo mkdir -p "$(dirname "$link_name")" && sudo ln -sT "$target" "$link_name" && success "Created symlink: $link_name -> $target"
}

create_dotfiles_symlink() {
	create_symlink "$DOTFILES_DIR/files/$1" "$2"
}

create_copy() {
	local source="$1"
	local destination="$2"

	create_backup_and_delete "$destination" && sudo mkdir -p "$(dirname "$destination")" && sudo cp "$source" "$destination" && success "Copied $source to $destination"
}

create_recursive_copy() {
	local source="$1"
	local destination="$2"

	create_backup_and_delete "$destination" && sudo mkdir -p "$(dirname "$destination")" && sudo cp -r "$source" "$destination" && success "Recursively copied $source to $destination"
}

create_dotfiles_copy() {
	create_copy "$DOTFILES_DIR/files/$1" "$2"
}

create_dotfiles_recursive_copy() {
	create_recursive_copy "$DOTFILES_DIR/files/$1" "$2"
}

# FIXME: does not seem to work multiple times when the marker is first line
insert_content_with_marker() {
	local file="$1" marker="$2" content="$3" comment_char_opening="${4:-#}" comment_char_closing="${5:-#}"
	local start="$comment_char_opening AUTOGENERATED START $marker $comment_char_closing"
	local end="$comment_char_opening AUTOGENERATED END $marker $comment_char_closing"

	# Create temp file to preserve original location
	local temp_file=$(mktemp)

	if sudo grep -Fq "$start" "$file" 2>/dev/null; then
		# Replace content between markers
		local start_line=$(sudo grep -Fn "$start" "$file" | cut -d: -f1)
		local end_line=$(sudo grep -Fn "$end" "$file" | cut -d: -f1)

		# Copy before, insert new content, copy after
		sudo sed -n "1,$((start_line - 1))p" "$file" >"$temp_file"
		printf '%s\n%s\n%s\n' "$start" "$content" "$end" >>"$temp_file"
		sudo sed -n "$((end_line + 1)),\$p" "$file" >>"$temp_file"
		sudo cp "$temp_file" "$file"
	else
		# Append new content if markers don't exist
		sudo cp "$file" "$temp_file"
		printf '%s\n%s\n%s\n' "$start" "$content" "$end" >>"$temp_file"
		sudo cp "$temp_file" "$file"
	fi

	rm -f "$temp_file"
	success "Inserted content with marker $marker in $file"
}

install_packages() {
	local packages=("$@")

	if [ ${#packages[@]} -eq 0 ]; then
		warn "No packages specified for installation."
		return 1
	fi

	info "Installing packages: ${packages[*]}"
	sudo pacman -S --noconfirm --needed "${packages[@]}"
}

install_yay_packages() {
	local packages=("$@")

	if [ ${#packages[@]} -eq 0 ]; then
		warn "No yay packages specified for installation."
		return 1
	fi

	info "Installing yay packages: ${packages[*]}"
	yay -S --needed "${packages[@]}"
}

section() {
	echo -e "\n${color_info}===== [ $* ] =====${color_reset}\n"
}
