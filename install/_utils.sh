#!/usr/bin/env bash

# read global envvar user and create it if it does not exist
DOTFILES_USERNAME="${USER:-$(whoami)}"
DOTFILES_DEVICE_NAME="${DEVICE_NAME:-$(hostname)}"

DOTFILES_DIR="$HOME/dotfiles"

create_backup() {
	local file="$1"

	if [ -e "$file" ]; then
		echo "File $file already exists. Backup will be created."
		mv --interactive "$file" "${file}.bak"
		echo "Backup created: ${file}.bak"
	else
		echo "No existing file to backup: $file"
	fi
}

create_symlink() {
	local target="$1"
	local link_name="$2"

	create_backup "$link_name"

	ln -sT "$target" "$link_name"
	echo "Created symlink: $link_name -> $target"
}

create_dotfiles_symlink() {
	create_symlink "$1" "$DOTFILES_DIR/$2"
}

create_copy() {
	local source="$1"
	local destination="$2"

	create_backup "$destination"

	cp "$source" "$destination"
	echo "Copied $source to $destination"
}

create_dotfiles_copy() {
	create_copy "$DOTFILES_DIR/$1" "$2"
}

insert_content_with_marker() {
	local file="$1" marker="$2" content="$3"
	local start="# AUTOGENERATED START $marker"
	local end="# AUTOGENERATED END $marker"

	if grep -q "$start" "$file" 2>/dev/null; then
		sed -i "/$start/,/$end/d" "$file"
	fi
	printf '%s\n%s\n%s\n' "$start" "$content" "$end" >>"$file"
}

install_packages() {
	local packages=("$@")

	if [ ${#packages[@]} -eq 0 ]; then
		echo "No packages specified for installation."
		return 1
	fi

	echo "Installing packages: ${packages[*]}"
	sudo pacman -S --noconfirm "${packages[@]}"
}
